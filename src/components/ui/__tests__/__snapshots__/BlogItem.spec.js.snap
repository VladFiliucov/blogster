// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BlogItem render should render usual blog item 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="wrapper card radius shadowDepth1"
>
    <div>
        <Link
            replace={false}
            to="localhost:9090/posts/4"
        >
            <Image
                image={
                    Object {
                        "alt": "Who cares",
                        "src": "/pictures/picture1.jpg",
                        "style": Object {
                          "height": 200,
                          "width": 200,
                        },
                      }
                }
            />
        </Link>
        <div
            className="card__content card__padding"
        >
            <PostDetails
                details={undefined}
            />
            <TextBox>
                Text for blogpost
            </TextBox>
            <Connect(Like)
                postId={4}
            />
        </div>
    </div>
</div>,
  "nodes": Array [
    <div
      className="wrapper card radius shadowDepth1"
>
      <div>
            <Link
                  replace={false}
                  to="localhost:9090/posts/4"
            >
                  <Image
                        image={
                              Object {
                                    "alt": "Who cares",
                                    "src": "/pictures/picture1.jpg",
                                    "style": Object {
                                      "height": 200,
                                      "width": 200,
                                    },
                                  }
                        }
                  />
            </Link>
            <div
                  className="card__content card__padding"
            >
                  <PostDetails
                        details={undefined}
                  />
                  <TextBox>
                        Text for blogpost
                  </TextBox>
                  <Connect(Like)
                        postId={4}
                  />
            </div>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <BlogItem
        post={
                Object {
                        "id": 4,
                        "image": Object {
                          "alt": "Who cares",
                          "src": "/pictures/picture1.jpg",
                          "style": Object {
                            "height": 200,
                            "width": 200,
                          },
                        },
                        "postUrl": "localhost:9090/posts/4",
                        "text": "Text for blogpost",
                      }
        }
/>,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "post": Object {
            "id": 4,
            "image": Object {
              "alt": "Who cares",
              "src": "/pictures/picture1.jpg",
              "style": Object {
                "height": 200,
                "width": 200,
              },
            },
            "postUrl": "localhost:9090/posts/4",
            "text": "Text for blogpost",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="wrapper card radius shadowDepth1"
>
          <div>
                    <Link
                              replace={false}
                              to="localhost:9090/posts/4"
                    >
                              <Image
                                        image={
                                                  Object {
                                                            "alt": "Who cares",
                                                            "src": "/pictures/picture1.jpg",
                                                            "style": Object {
                                                              "height": 200,
                                                              "width": 200,
                                                            },
                                                          }
                                        }
                              />
                    </Link>
                    <div
                              className="card__content card__padding"
                    >
                              <PostDetails
                                        details={undefined}
                              />
                              <TextBox>
                                        Text for blogpost
                              </TextBox>
                              <Connect(Like)
                                        postId={4}
                              />
                    </div>
          </div>
</div>,
        "_debugID": 6,
        "_renderedOutput": <div
          className="wrapper card radius shadowDepth1"
>
          <div>
                    <Link
                              replace={false}
                              to="localhost:9090/posts/4"
                    >
                              <Image
                                        image={
                                                  Object {
                                                            "alt": "Who cares",
                                                            "src": "/pictures/picture1.jpg",
                                                            "style": Object {
                                                              "height": 200,
                                                              "width": 200,
                                                            },
                                                          }
                                        }
                              />
                    </Link>
                    <div
                              className="card__content card__padding"
                    >
                              <PostDetails
                                        details={undefined}
                              />
                              <TextBox>
                                        Text for blogpost
                              </TextBox>
                              <Connect(Like)
                                        postId={4}
                              />
                    </div>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <BlogItem
    post={
        Object {
            "id": 4,
            "image": Object {
              "alt": "Who cares",
              "src": "/pictures/picture1.jpg",
              "style": Object {
                "height": 200,
                "width": 200,
              },
            },
            "postUrl": "localhost:9090/posts/4",
            "text": "Text for blogpost",
          }
    }
/>,
}
`;
